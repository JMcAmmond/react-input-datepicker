{"version":3,"sources":["../../src/validation/date.ts","../../src/helpers.ts","../../src/styles.ts","../../src/index.tsx","common/elements.tsx","assets/blob.svg","common/Blob.tsx","common/Intro.tsx","common/input-datepicker.tsx","common/CodeTemplate.tsx","pages/Simple.tsx","pages/Labels.tsx","pages/DateRange.tsx","pages/Order.tsx","pages/Errors.tsx","hooks/useHashRouter.tsx","App.tsx","index.tsx"],"names":["buildDateFromInput","day","Date","Number","isValidDate","userDate","month","isDate","Object","dayMatch","date","monthMatch","yearMatch","isValidDateObject","props","maxDate","maxDatePlusOne","minDate","minDateMinusOne","spreadDateToObject","dateValue","year","flexRow","display","flexDirection","flexColumn","InputDatepicker","useState","hasError","setHasError","error","setError","setDate","orderArray","useMemo","onDateChange","useCallback","validDateChange","newDate","renderError","validate","errorString","onInputChange","e","inputField","className","style","htmlFor","id","type","name","value","onChange","onBlur","placeholder","dateField","dayLabel","monthLabel","yearLabel","useEffect","React","key","i","showLabels","showErrors","showPlaceholders","format","ExampleWrapper","styled","div","ExampleComponent","ExampleCode","ExampleHeader","h2","Container","Navigation","Content","IntroContainer","HeadLines","spin","keyframes","BlobContainer","PageHeader","Sticky","_extends","assign","target","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","fill","d","_ref","svgRef","title","viewBox","ref","ForwardRef","forwardRef","Blob","Intro","StyledInputDatepicker","CodeTemplate","exampleComponent","code","language","rainbow","Simple","setValue","Labels","monthsValue","setMonthsValue","labelsValue","setLabelsValue","placeholdersValue","setPlaceholdersValue","onMonthsDateChange","onLabelsDateChange","onPlaceholdersDateChange","months","labels","placeholders","DateRange","minValue","setMinValue","maxValue","setMaxValue","onMinDateChange","onMaxDateChange","Order","Errors","invalidValue","setInvalidValue","showValue","setShowValue","onInvalidDateChange","onShowDateChange","maxDateMessage","minDateMessage","invalidDate","invalidMessage","show","HashAnchor","href","children","routes","App","route","routeObject","setRoute","routeResult","routeComponent","toLowerCase","window","scrollTo","top","behavior","checkHash","location","hash","updateHash","substring","addEventListener","removeEventListener","useHashRouter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b8577a8.chunk.js","sourcesContent":["/**\n * Build a date from input\n * @param {string} day\n * @param {string} month\n * @param {string} year\n */\nconst buildDateFromInput = (day: string, month: string, year: string) => {\n  const date = new Date(Number(year), Number(month) - 1, Number(day));\n  return date;\n};\n\n/**\n * Check if the date value is a valid Date object and that it matches the values it was created from\n * @param date Date\n * @param day string\n * @param month string\n * @param year string\n */\nconst isValidDateObject = (\n  date: Date,\n  day: string,\n  month: string,\n  year: string,\n) => {\n  const isDate = Object.prototype.toString.call(date) === '[object Date]';\n  const dayMatch = date.getDate() === Number(day);\n  const monthMatch = date.getMonth() === Number(month) - 1;\n  const yearMatch = date.getFullYear() === Number(year);\n\n  return isDate && dayMatch && monthMatch && yearMatch;\n};\n\n/**\n * Determine if provided date is a valid date and falls between date range\n * @param {string} day\n * @param {string} month\n * @param {string} year\n * @param {object} props\n */\nconst isValidDate = (day: string, month: string, year: string, props: any) => {\n  const userDate = buildDateFromInput(day, month, year);\n\n  // Must be a valid date\n  if (!isValidDateObject(userDate, day, month, year)) {\n    return props.invalidMessage || 'Not a valid date';\n  }\n\n  // Must be same or before max date\n  if (props.maxDate) {\n    const { maxDate } = props;\n    if (userDate > maxDate) {\n      const maxDatePlusOne = new Date(maxDate);\n      maxDatePlusOne.setDate(maxDatePlusOne.getDate() + 1);\n\n      return (\n        props.maxDateMessage ||\n        `Date must be less than ${maxDatePlusOne.toDateString().substring(3)}`\n      );\n    }\n  }\n\n  // Must be same or after min date\n  if (props.minDate) {\n    const { minDate } = props;\n    if (userDate < minDate) {\n      const minDateMinusOne = new Date(minDate);\n      minDateMinusOne.setDate(minDateMinusOne.getDate() - 1);\n\n      return (\n        props.minDateMessage ||\n        `Date must be greater than ${minDateMinusOne\n          .toDateString()\n          .substring(3)}`\n      );\n    }\n  }\n\n  return '';\n};\n\nexport { isValidDate, buildDateFromInput };\n","import { IDate } from './interfaces';\n\n/**\n * Parse date object into day, month, year state\n */\nexport const spreadDateToObject = (dateValue: Date | null): IDate => {\n  return {\n    day: dateValue ? `${dateValue.getDate()}` : '',\n    month: dateValue ? `${dateValue.getMonth() + 1}` : '',\n    year: dateValue ? `${dateValue.getFullYear()}` : '',\n  };\n};\n","export const flexRow: React.CSSProperties = {\n  display: 'flex',\n  flexDirection: 'row',\n};\n\nexport const flexColumn: React.CSSProperties = {\n  display: 'flex',\n  flexDirection: 'column',\n};\n","/* eslint-disable react/no-array-index-key */\nimport React, {\n  useState,\n  useCallback,\n  ChangeEvent,\n  useMemo,\n  useEffect,\n} from 'react';\nimport { isValidDate, buildDateFromInput } from './validation/date';\nimport { IDate, IInputDatePicker } from './interfaces';\nimport { spreadDateToObject } from './helpers';\nimport { flexRow, flexColumn } from './styles';\n\nconst InputDatepicker: React.FC<IInputDatePicker> = (props) => {\n  const [hasError, setHasError] = useState<boolean>(false);\n  const [error, setError] = useState<string>();\n  const [date, setDate] = useState<IDate>(spreadDateToObject(props.value));\n\n  const orderArray = useMemo(() => props.format!.split('/'), [props.format]);\n\n  /**\n   * Call onDateChange prop with the provided date object\n   */\n  const onDateChange = useCallback(\n    (newDate) => {\n      props.onDateChange(newDate);\n    },\n    [props],\n  );\n\n  /**\n   * Build a Date object and call the onDateChange function\n   */\n  const validDateChange = useCallback(() => {\n    const newDate = buildDateFromInput(date.day, date.month, date.year);\n    onDateChange(newDate);\n  }, [date.day, date.month, date.year, onDateChange]);\n\n  /**\n   * Sets the error state and calls the onDateChange function with a null value\n   */\n  const renderError = useCallback(\n    (err, hasErr) => {\n      setError(err);\n      setHasError(hasErr);\n      onDateChange(null);\n    },\n    [onDateChange],\n  );\n\n  /**\n   * Validates if a the inputs form a valid date\n   * Returns null if values are not set\n   * Returns null and errors if date is not valid\n   * Returns a valid date object when everything passes\n   */\n  const validate = useCallback(() => {\n    const { day, month, year } = date;\n\n    // Reset validation\n    setError('');\n    setHasError(false);\n\n    // Must contain values\n    if (!day || !month || !year) {\n      onDateChange(null);\n      return;\n    }\n\n    // Validate date input\n    const errorString = isValidDate(day, month, year, props);\n    if (errorString !== '') {\n      renderError(errorString, true);\n      return;\n    }\n\n    validDateChange();\n  }, [date, onDateChange, props, renderError, validDateChange]);\n\n  /**\n   * Sets the date state when an input value changes\n   */\n  const onInputChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      setDate({ ...date, [e.target.name]: e.target.value });\n    },\n    [date],\n  );\n\n  /**\n   * Create an input field with a form label\n   */\n  const inputField = useCallback(\n    (id, label, value) => {\n      const className = `rid_${id}-container`;\n\n      return (\n        <div className={`${className}`} style={flexColumn}>\n          {props.showLabels ? <label htmlFor={id}>{label}</label> : null}\n          <input\n            className={`${hasError ? 'has-error' : ''}`}\n            type=\"number\"\n            id={id}\n            name={id}\n            value={value}\n            onChange={onInputChange}\n            onBlur={validate}\n            placeholder={props.showPlaceholders ? label : null}\n          />\n        </div>\n      );\n    },\n    [\n      hasError,\n      onInputChange,\n      props.showLabels,\n      props.showPlaceholders,\n      validate,\n    ],\n  );\n\n  /**\n   * Creates an object with all input field elements\n   */\n  const dateField = useMemo(() => {\n    const dayLabel = (props.labels && props.labels.day) || 'Day';\n    const monthLabel = (props.labels && props.labels.month) || 'Month';\n    const yearLabel = (props.labels && props.labels.year) || 'Year';\n\n    const fields = {\n      day: inputField('day', dayLabel, date.day),\n      month: inputField('month', monthLabel, date.month),\n      year: inputField('year', yearLabel, date.year),\n    };\n\n    return fields;\n  }, [date.day, date.month, date.year, inputField, props]);\n\n  /**\n   * When ever the date state changes then clear errors and validate the date\n   */\n  useEffect(() => {\n    validate();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const { value } = props;\n    const { day, month, year } = date;\n\n    if (value !== null && value !== buildDateFromInput(day, month, year)) {\n      setDate(spreadDateToObject(value));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props]);\n\n  return (\n    <div className={`rid ${props.className}`}>\n      <div className=\"rid_date-container\" style={flexRow}>\n        {orderArray.map((key, i) => {\n          return (\n            <React.Fragment key={`${key}-${i}`}>\n              {dateField[key]}\n            </React.Fragment>\n          );\n        })}\n      </div>\n      {props.showErrors && hasError && (\n        <div className=\"error-message\">{error}</div>\n      )}\n    </div>\n  );\n};\n\nexport default InputDatepicker;\n\nInputDatepicker.defaultProps = {\n  value: null,\n  showLabels: true,\n  showErrors: true,\n  showPlaceholders: true,\n  format: 'month/day/year',\n  className: '',\n};\n","import styled, { keyframes } from 'styled-components';\n\nexport const ExampleWrapper = styled.div`\n  max-width: 750px;\n  margin: 0 auto 5rem;\n`;\n\nexport const ExampleComponent = styled.div`\n  padding: 1rem;\n  background-color: #293241;\n  min-height: 120px;\n  border-top-right-radius: 3px;\n  border-top-left-radius: 3px;\n\n  > * {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n  }\n`;\n\nexport const ExampleCode = styled.div`\n  border-bottom-right-radius: 3px;\n  border-bottom-left-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const ExampleHeader = styled.h2`\n  font-size: 1.125rem;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  color: #82e7d9;\n  font-weight: 400;\n  margin: 0 0 1rem 0;\n`;\n\nexport const Container = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  display: flex;\n  padding: 0 10px;\n  flex-direction: column;\n  position: relative;\n\n  @media (min-width: 900px) {\n    flex-direction: row;\n  }\n`;\n\nexport const Navigation = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 3rem;\n  justify-content: center;\n\n  a {\n    color: #fff;\n    text-decoration: none;\n    padding: 10px 1rem;\n    display: inline-block;\n    margin: 3px;\n    border: 1px solid rgba(255, 255, 255, 0.1);\n\n    &:hover {\n      color: #82e7d9;\n      border-color: #82e7d9;\n    }\n  }\n\n  @media (min-width: 900px) {\n    flex-direction: column;\n    width: 180px;\n    justify-content: start;\n\n    a {\n      display: block;\n      width: 100%;\n      margin: 0;\n      border: none;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  flex: 1;\n`;\n\nexport const IntroContainer = styled.div`\n  padding: 1rem;\n  margin-bottom: 3rem;\n\n  @media (min-width: 900px) {\n    margin-bottom: 5rem;\n  }\n`;\n\nexport const HeadLines = styled.div`\n  position: relative;\n`;\n\nconst spin = keyframes`\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const BlobContainer = styled.div`\n  position: absolute;\n  transform: scale(2.85);\n  top: -350px;\n  color: #293241;\n\n  svg {\n    display: block;\n    margin: auto;\n    height: 16rem;\n    animation: ${spin} 50s linear infinite;\n  }\n`;\n\nexport const PageHeader = styled.h2`\n  margin: 0 0 2rem;\n`;\n\nexport const Sticky = styled.div`\n  position: sticky;\n  top: 0;\n`;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M359.408 0.499261C434.083 0.69572 509.059 15.4608 570.136 58.4268C631.828 101.825 675.247 166.543 697.772 238.528C720.119 309.946 720.46 387.141 695.015 457.515C670.121 526.365 618.875 581.064 558.794 622.901C499.694 664.055 431.329 687.499 359.408 691.212C284.339 695.087 205.553 688.115 144.481 644.291C83.2293 600.338 54.1113 526.936 30.6392 455.293C7.11277 383.484 -10.9409 307.559 10.4113 235.074C32.1072 161.421 84.1477 100.148 147.872 57.3159C209.988 15.5657 284.566 0.302364 359.408 0.499261Z\"\n});\n\nvar SvgBlob = function SvgBlob(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 715 693\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgBlob, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/blob.2b41c7b9.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { BlobContainer } from './elements';\nimport { ReactComponent as BlobSvg } from '../assets/blob.svg';\n\nconst Blob: React.FC = () => {\n  return (\n    <BlobContainer>\n      <BlobSvg />\n    </BlobContainer>\n  );\n};\n\nexport default Blob;\n","import React from 'react';\nimport { Container, IntroContainer, HeadLines } from './elements';\nimport Blob from './Blob';\n\nconst Intro: React.FC = () => {\n  return (\n    <IntroContainer>\n      <Container>\n        <Blob />\n        <HeadLines>\n          <h1>react-input-datepicker</h1>\n          <p>A simple and reusable input datepicker component for React</p>\n        </HeadLines>\n      </Container>\n    </IntroContainer>\n  );\n};\n\nexport default Intro;\n","import styled from 'styled-components';\nimport InputDatepicker from 'react-input-datepicker';\n\nconst StyledInputDatepicker: any = styled(InputDatepicker)`\n  .rid_date-container {\n    > div {\n      margin-right: 15px;\n\n      &:last-child {\n        margin-right: 0;\n      }\n\n      label {\n        font-size: 0.8rem;\n        margin-bottom: 5px;\n        font-weight: 600;\n      }\n\n      input {\n        color: #444444;\n        font-size: 13px;\n        padding: 11px;\n        border-radius: 3px;\n        border: none;\n        text-align: center;\n        &::-webkit-inner-spin-button,\n        &::-webkit-outer-spin-button {\n          -webkit-appearance: none;\n          margin: 0;\n        }\n        -moz-appearance: textfield;\n\n        &.has-error {\n          border: 2px solid #f97474;\n        }\n      }\n    }\n\n    .rid_day-container input {\n      cursor: pointer;\n      width: 60px;\n    }\n    .rid_month-container input {\n      cursor: pointer;\n      width: 60px;\n    }\n    .rid_year-container input {\n      cursor: pointer;\n      width: 80px;\n    }\n  }\n\n  .error-message {\n    color: #f97474;\n    margin-top: 6px;\n    font-size: 0.9rem;\n  }\n`;\n\nconst DateContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n\n  .rid_date-container {\n    justify-content: center;\n  }\n`;\n\nexport { StyledInputDatepicker, DateContainer };\n","import {\n  ExampleWrapper,\n  ExampleHeader,\n  ExampleComponent,\n  ExampleCode,\n} from '../common/elements';\nimport React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { rainbow } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\ninterface ICodeTemplate {\n  title?: string;\n  exampleComponent: JSX.Element;\n  code: string;\n}\n\nconst CodeTemplate: React.FC<ICodeTemplate> = ({\n  title,\n  exampleComponent,\n  code,\n}) => {\n  return (\n    <ExampleWrapper>\n      {title && <ExampleHeader>{title}</ExampleHeader>}\n      <ExampleComponent>{exampleComponent}</ExampleComponent>\n      <ExampleCode>\n        <SyntaxHighlighter language=\"typescript\" style={rainbow}>\n          {code}\n        </SyntaxHighlighter>\n      </ExampleCode>\n    </ExampleWrapper>\n  );\n};\n\nexport default CodeTemplate;\n","import React, { useState, useCallback } from 'react';\nimport { StyledInputDatepicker } from '../common/input-datepicker';\nimport CodeTemplate from '../common/CodeTemplate';\n\nconst Simple: React.FC = () => {\n  const [value, setValue] = useState<Date | null>(new Date());\n\n  const onDateChange = useCallback((date: any) => {\n    setValue(date);\n  }, []);\n\n  return (\n    <>\n      <CodeTemplate\n        code={code}\n        exampleComponent={\n          <StyledInputDatepicker value={value} onDateChange={onDateChange} />\n        }\n      />\n    </>\n  );\n};\n\nexport default Simple;\n\nconst code = `\n  const [value, setValue] = useState<Date | null>(new Date());\n\n  const onDateChange = useCallback((date: Date) => {\n    setValue(date);\n  }, []);\n\n  return (\n    <InputDatepicker\n      value={value}\n      onDateChange={onDateChange}\n    />\n  )\n`;\n","import React, { useState, useCallback } from 'react';\nimport { StyledInputDatepicker } from '../common/input-datepicker';\nimport CodeTemplate from '../common/CodeTemplate';\nimport { PageHeader } from '../common/elements';\n\nconst Labels: React.FC = () => {\n  const [monthsValue, setMonthsValue] = useState<Date | null>();\n  const [labelsValue, setLabelsValue] = useState<Date | null>();\n  const [placeholdersValue, setPlaceholdersValue] = useState<Date | null>();\n\n  const onMonthsDateChange = useCallback((date: Date) => {\n    setMonthsValue(date);\n  }, []);\n  const onLabelsDateChange = useCallback((date: Date) => {\n    setLabelsValue(date);\n  }, []);\n  const onPlaceholdersDateChange = useCallback((date: Date) => {\n    setPlaceholdersValue(date);\n  }, []);\n\n  return (\n    <>\n      <PageHeader>Labels</PageHeader>\n\n      <CodeTemplate\n        title=\"Custom Labels\"\n        code={months}\n        exampleComponent={\n          <StyledInputDatepicker\n            value={monthsValue}\n            onDateChange={onMonthsDateChange}\n            labels={{\n              year: 'Año',\n              month: 'Mes',\n              day: 'Día',\n            }}\n          />\n        }\n      />\n      <CodeTemplate\n        title=\"Hide Labels\"\n        code={labels}\n        exampleComponent={\n          <StyledInputDatepicker\n            value={labelsValue}\n            onDateChange={onLabelsDateChange}\n            showLabels={false}\n          />\n        }\n      />\n\n      <CodeTemplate\n        title=\"Hide Placeholders\"\n        code={placeholders}\n        exampleComponent={\n          <StyledInputDatepicker\n            value={placeholdersValue}\n            onDateChange={onPlaceholdersDateChange}\n            showPlaceholders={false}\n          />\n        }\n      />\n    </>\n  );\n};\n\nexport default Labels;\n\nconst months = `\n  return (\n    <InputDatepicker\n      labels={{\n        year: 'Año',\n        month: 'Mes',\n        day: 'Día',\n      }}\n      ...\n    />\n  )\n`;\n\nconst labels = `\n  return (\n    <InputDatepicker\n      showLabels={false}\n      ...\n    />\n  )\n`;\n\nconst placeholders = `\n  return (\n    <InputDatepicker\n      showPlaceholders={false}  \n      ...\n    />\n  )\n`;\n","import React, { useState, useCallback } from 'react';\nimport { StyledInputDatepicker } from '../common/input-datepicker';\nimport CodeTemplate from '../common/CodeTemplate';\nimport { PageHeader } from '../common/elements';\n\nconst DateRange: React.FC = () => {\n  const [minValue, setMinValue] = useState<Date | null>(new Date(1956, 0, 1));\n  const [maxValue, setMaxValue] = useState<Date | null>(new Date());\n\n  const onMinDateChange = useCallback((date: any) => {\n    setMinValue(date);\n  }, []);\n\n  const onMaxDateChange = useCallback((date: any) => {\n    setMaxValue(date);\n  }, []);\n\n  return (\n    <>\n      <PageHeader>Date Range</PageHeader>\n\n      <CodeTemplate\n        title=\"Max Date\"\n        code={maxDate}\n        exampleComponent={\n          <StyledInputDatepicker\n            value={maxValue}\n            onDateChange={onMaxDateChange}\n            maxDate={new Date(1999, 11, 31)}\n          />\n        }\n      />\n\n      <CodeTemplate\n        title=\"Min Date\"\n        code={minDate}\n        exampleComponent={\n          <StyledInputDatepicker\n            value={minValue}\n            onDateChange={onMinDateChange}\n            minDate={new Date(2000, 0, 1)}\n          />\n        }\n      />\n    </>\n  );\n};\n\nexport default DateRange;\n\nconst minDate = `\n  return (\n    <InputDatepicker\n      minDate={new Date(2000, 0, 1)}\n      ...\n    />\n  )\n`;\n\nconst maxDate = `\n  return (\n    <InputDatepicker\n      maxDate={new Date(1999, 11, 31)}\n      ...\n    />\n  )\n`;\n","import React, { useState, useCallback } from 'react';\nimport { StyledInputDatepicker } from '../common/input-datepicker';\nimport CodeTemplate from '../common/CodeTemplate';\nimport { PageHeader } from '../common/elements';\n\nconst Order: React.FC = () => {\n  const [value, setValue] = useState<Date | null>(new Date());\n\n  const onDateChange = useCallback((date: any) => {\n    setValue(date);\n  }, []);\n\n  return (\n    <>\n      <PageHeader>Date Format</PageHeader>\n\n      <CodeTemplate\n        title=\"Input Order\"\n        code={code}\n        exampleComponent={\n          <StyledInputDatepicker\n            value={value}\n            onDateChange={onDateChange}\n            format=\"year/month/day\"\n          />\n        }\n      />\n    </>\n  );\n};\n\nexport default Order;\n\nconst code = `\n  return (\n    <InputDatepicker\n      format=\"year/month/day\"\n      ...\n    />\n  )\n\n  /**\n   * Format Options\n   * \n   * 'day/month/year'\n   * 'day/year/month'\n   * 'month/day/year'\n   * 'month/year/day'\n   * 'year/month/day'\n   * 'year/day/month'\n   */\n`;\n","import React, { useState, useCallback } from 'react';\nimport { StyledInputDatepicker } from '../common/input-datepicker';\nimport CodeTemplate from '../common/CodeTemplate';\nimport { PageHeader } from '../common/elements';\n\nconst Errors: React.FC = () => {\n  const [minValue, setMinValue] = useState<Date | null>(new Date(1956, 0, 1));\n  const [maxValue, setMaxValue] = useState<Date | null>(new Date());\n  const [invalidValue, setInvalidValue] = useState<Date | null>(\n    new Date(2020, 1, 28),\n  );\n  const [showValue, setShowValue] = useState<Date | null>(new Date());\n\n  const onMinDateChange = useCallback((date: any) => {\n    setMinValue(date);\n  }, []);\n  const onMaxDateChange = useCallback((date: any) => {\n    setMaxValue(date);\n  }, []);\n  const onInvalidDateChange = useCallback((date: any) => {\n    setInvalidValue(date);\n  }, []);\n  const onShowDateChange = useCallback((date: any) => {\n    setShowValue(date);\n  }, []);\n\n  return (\n    <>\n      <PageHeader>Errors</PageHeader>\n\n      <CodeTemplate\n        title=\"Max Date Message\"\n        code={maxDate}\n        exampleComponent={\n          <StyledInputDatepicker\n            value={maxValue}\n            onDateChange={onMaxDateChange}\n            maxDate={new Date(1999, 11, 31)}\n            maxDateMessage=\"Wow there cowboy. That date is over the max.\"\n          />\n        }\n      />\n\n      <CodeTemplate\n        title=\"Min Date Message\"\n        code={minDate}\n        exampleComponent={\n          <StyledInputDatepicker\n            value={minValue}\n            onDateChange={onMinDateChange}\n            minDate={new Date(2000, 0, 1)}\n            minDateMessage=\"Try something a little bigger wont you.\"\n          />\n        }\n      />\n\n      <CodeTemplate\n        title=\"Invalid Date Message\"\n        code={invalidDate}\n        exampleComponent={\n          <StyledInputDatepicker\n            value={invalidValue}\n            onDateChange={onInvalidDateChange}\n            invalidMessage=\"I don't think this is correct\"\n          />\n        }\n      />\n\n      <CodeTemplate\n        title=\"Hide Error Messages\"\n        code={show}\n        exampleComponent={\n          <StyledInputDatepicker\n            value={showValue}\n            onDateChange={onShowDateChange}\n            maxDate={new Date(1999, 11, 31)}\n            showErrors={false}\n          />\n        }\n      />\n    </>\n  );\n};\n\nexport default Errors;\n\nconst minDate = `\n  return (\n    <InputDatepicker\n      minDate={new Date(2000, 0, 1)}\n      minDateMessage=\"Try something a little bigger wont you.\"\n      ...\n    />\n  )\n`;\n\nconst maxDate = `\n  return (\n    <InputDatepicker\n      maxDate={new Date(1999, 11, 31)}\n      maxDateMessage=\"Wow there cowboy. That date is over the max.\"\n      ...\n    />\n  )\n`;\n\nconst invalidDate = `\n  // Try entering Feb 31\n\n  return (\n    <InputDatepicker\n      invalidMessage=\"I don't think this is correct\"\n      ...\n    />\n  )\n`;\n\nconst show = `\n  return (\n    <InputDatepicker\n      maxDate={new Date(1999, 11, 31)}\n      showErrors={false}\n      ...\n    />\n  )\n`;\n","import React, { useState, useMemo, useEffect, useCallback } from 'react';\n\nexport const useHashRouter = (routeObject: {\n  [key: string]: () => JSX.Element;\n}) => {\n  const [route, setRoute] = useState<string>('');\n\n  const routeResult = useMemo(() => {\n    const routeComponent = routeObject[route.toLowerCase()];\n    if (routeComponent) {\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth',\n      });\n      return routeComponent();\n    }\n    return null;\n  }, [route, routeObject]);\n\n  const checkHash = useCallback(() => {\n    if (window.location.hash === '' || window.location.hash === '#') {\n      window.location.hash = '/';\n    }\n  }, []);\n\n  useEffect(() => {\n    const updateHash = () => {\n      checkHash();\n      setRoute(window.location.hash.substring(1).toLowerCase());\n    };\n\n    window.addEventListener('hashchange', updateHash, false);\n\n    return () => window.removeEventListener('hashchange', updateHash, false);\n  }, [checkHash]);\n\n  useEffect(() => {\n    checkHash();\n    setRoute(window.location.hash.substring(1).toLowerCase());\n  }, [checkHash]);\n\n  return routeResult;\n};\n\ninterface IHashAnchor {\n  href: string;\n}\n\nexport const HashAnchor: React.FC<IHashAnchor> = ({ href, children }) => {\n  return <a href={`#${href}`}>{children}</a>;\n};\n","import React from 'react';\nimport Intro from './common/Intro';\nimport Simple from './pages/Simple';\nimport Labels from './pages/Labels';\nimport DateRange from './pages/DateRange';\nimport Order from './pages/Order';\nimport Errors from './pages/Errors';\nimport { useHashRouter, HashAnchor } from './hooks/useHashRouter';\nimport { Navigation, Container, Content, Sticky } from './common/elements';\n\nconst routes = {\n  '/': () => <Simple />,\n  '/labels': () => <Labels />,\n  '/date-range': () => <DateRange />,\n  '/format': () => <Order />,\n  '/errors': () => <Errors />,\n};\n\nconst App = () => {\n  const route = useHashRouter(routes);\n\n  return (\n    <>\n      <Intro />\n      <Container>\n        <Navigation>\n          <Sticky>\n            <HashAnchor href=\"/\">Home</HashAnchor>\n            <HashAnchor href=\"/labels\">Labels</HashAnchor>\n            <HashAnchor href=\"/date-range\">Date Range</HashAnchor>\n            <HashAnchor href=\"/format\">Date Format</HashAnchor>\n            <HashAnchor href=\"/errors\">Errors</HashAnchor>\n          </Sticky>\n        </Navigation>\n        <Content>{route || <>Not Available</>}</Content>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}